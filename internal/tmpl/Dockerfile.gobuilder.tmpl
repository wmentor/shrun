# syntax={{ DockerSyntax }}
FROM golang:{{ GoVersion }}

#ENV CGO_ENABLED 0
ENV GOOS linux
ENV GOARCH {{ GoArch }}

{{ if GoEnableProxy }}
ENV GOPROXY https://devci-nexus-int.l.postgrespro.ru/repository/goproxy
ENV GONOPROXY none
{{ end }}

ENV GOPRIVATE postgrespro.ru/*
ENV GONOSUMDB postgrespro.ru/*
ENV GOPATH /go
ENV LINTVER {{ GoLintVersion }}

RUN <<-EOF
  mkdir -p /repo /goloop /download /go/pkg /go/bin
  
  # Install PostgresPro CA cert
  curl -fsSL http://ssl.postgrespro.ru/l.postgrespro.ru.ca.crt -o /usr/local/share/ca-certificates/l.postgrespro.ru.ca.crt
  /usr/sbin/update-ca-certificates
  
  go install github.com/go-delve/delve/cmd/dlv@latest

  go install golang.org/x/tools/cmd/goimports@latest
  go install github.com/golang/mock/mockgen@v{{ GoMockVersion }}
  go install golang.org/x/vuln/cmd/govulncheck@latest
  go install github.com/swaggo/swag/cmd/swag@v{{ GoSwagVersion }}
  
  wget -O /download/golangci-lint-$LINTVER-linux-{{ GoArch }}.deb https://github.com/golangci/golangci-lint/releases/download/v$LINTVER/golangci-lint-$LINTVER-linux-{{ GoArch }}.deb
  dpkg -i /download/*.deb
  
  apt-get update
  DEBIAN_FRONTEND=noninteractive apt -y install less vim jq
  apt-get purge -y --allow-remove-essential --allow-change-held-packages
  apt-get autoremove -y
  apt-get clean -y
EOF

WORKDIR /goloop

RUN <<-EOF
  printf 'package main\n\nimport (\n\t"time"\n)\n\nfunc main() {\n\tfor {\n\t\ttime.Sleep(time.Second)\n\t}\n}\n' > /goloop/goloop.go
  go mod init goloop
  go build
EOF

WORKDIR /repo

ENTRYPOINT ["/goloop/goloop"]
