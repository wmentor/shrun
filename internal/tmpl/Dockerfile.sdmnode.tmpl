FROM gobuilder:latest as gbuilder

ENV BUILDIR /build

RUN mkdir $BUILDIR

WORKDIR $BUILDIR
COPY shardman-utils $BUILDIR/shardman-utils
WORKDIR $BUILDIR/shardman-utils

RUN --mount=type=cache,target=/go/pkg \
    go mod tidy && make

FROM pgbuildenv as sdmbuilder

ENV \
    BUILDIR=/build \
    DEBIAN_FRONTEND=noninteractive \
    LC_ALL=C.UTF-8 \
    CFLAGS=-O0 

WORKDIR $BUILDIR
COPY shardman $BUILDIR/shardman
WORKDIR $BUILDIR/shardman

RUN make clean || true

RUN ./configure --enable-debug \
    --enable-cassert \
    --enable-nls \
    --with-perl \
    --with-python \
    --with-tcl \
    --with-gssapi \
    --with-openssl \
    --with-libxml \
    --with-libxslt \
    --with-ldap \
    --with-icu \
    --with-tclconfig=/usr/lib/tcl8.6 \
    --enable-svt5 \
    --with-uuid=ossp

#    --enable-coverage \
#    --enable-tap-tests \
 
RUN make -s -j4 install \
    && make -s -C contrib install \ 
    # pg_probackup community edition if not synced another
    && if [ ! -d contrib/pg_probackup ]; then GIT_SSL_NO_VERIFY=1 git clone --depth 1 --branch REL_2_5 https://github.com/postgrespro/pg_probackup.git contrib/pg_probackup ; fi \
    && cd contrib/pg_probackup \
    && make && make install

FROM pgdestenv:latest

ARG PG_MAJOR={{ PgMajorVersion }}
ARG SDM_CLUSTER_NAME={{ ClusterName }}
ARG SDM_LOG_LEVEL={{ ClusterLogLevel }}
ARG SDM_STORE_ENDPOINTS={{ EtcdList }}

ENV SAN DNS:shrn1,DNS:shrn2,DNS:shrn3,DNS:shrn4,DNS:shrn5,DNS:shrn6,DNS:shrn7,DNS:shrn8,DNS:shrn9,DNS:shrn10,DNS:shrn11,DNS:shrn12,DNS:localhost
ENV APP /opt/pgpro/sdm-$PG_MAJOR

COPY --from=sdmbuilder /usr/local/pgsql $APP
COPY --from=sdmbuilder /build/shardman /build/shardman
COPY rc.local /etc/rc.local
COPY sdmspec.json /etc/shardman
COPY openssl.conf /tmp
COPY --from=gbuilder /build/shardman-utils/bin/ $APP/bin
COPY --from=gbuilder /build/shardman-utils/systemd/ /tmp/systemd

RUN sed -i -e "s:\$(pg_major):$PG_MAJOR:g" /etc/rc.local && chmod 755 /etc/rc.local \
    && sed -i -e "s:\$(pg_major):$PG_MAJOR:g" /tmp/systemd/* \
    && mv /tmp/systemd/* /lib/systemd/system \
    && sed -i "s/var\/lib\/pgpro\/sdm-$PG_MAJOR\/data/etc\/shardman/g" /usr/lib/systemd/system/shardmand\@.service \
    && chown postgres:postgres /etc/shardman -R \
    && chown postgres:postgres /opt/pgpro -R \
    && chown postgres:postgres /build -R \
    && touch /var/log/postgres.log \
    && chown postgres:postgres /var/log/postgres.log \
    && mkdir -p $APP/data \
    && printf "postgres ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers \
    && mkdir -p /etc/ssh/ssh_config.d/ \
    && printf "StrictHostKeyChecking no\n" >> /etc/ssh/ssh_config.d/pg.conf \
    && printf "UserKnownHostsFile /dev/null" >> /etc/ssh/ssh_config.d/pg.conf \
    && systemctl enable ssh rsyslog \
    && mkdir -p /var/lib/postgresql \
    && mkdir -p /var/lib/postgresql/.ssh/ \
    && ssh-keygen -t rsa -N '' -f  /var/lib/postgresql/.ssh/id_rsa \
    {{ if EnableSSL }}&& openssl req -new -x509 -days 3650 -nodes -text -out /var/lib/postgresql/.ssh/ca.crt -keyout /var/lib/postgresql/.ssh/ca.key -subj "/CN=root-ca" \
    && CN=localhost SAN=$SAN  openssl req -new -nodes -out /var/lib/postgresql/.ssh/server.csr -keyout /var/lib/postgresql/.ssh/server.key -extensions server -config /tmp/openssl.conf \
    && CN=localhost SAN=$SAN openssl x509 -req -in /var/lib/postgresql/.ssh/server.csr -days 3650 -CA /var/lib/postgresql/.ssh/ca.crt -CAkey /var/lib/postgresql/.ssh/ca.key -CAcreateserial -out /var/lib/postgresql/.ssh/server.crt -extensions server -extfile /tmp/openssl.conf \
    && openssl req -new -nodes -out /var/lib/postgresql/.ssh/client.csr -keyout /var/lib/postgresql/.ssh/client.key -subj "/CN=postgres" \
    && openssl x509 -req -in /var/lib/postgresql/.ssh/client.csr -days 3650 -CA /var/lib/postgresql/.ssh/ca.crt -CAkey /var/lib/postgresql/.ssh/ca.key -CAcreateserial -out /var/lib/postgresql/.ssh/client.crt \
    && openssl req -new -nodes -out /var/lib/postgresql/.ssh/repluser.csr -keyout /var/lib/postgresql/.ssh/repluser.key -subj "/CN=repluser" \
    && openssl x509 -req -in /var/lib/postgresql/.ssh/repluser.csr -days 3650 -CA /var/lib/postgresql/.ssh/ca.crt -CAkey /var/lib/postgresql/.ssh/ca.key -CAcreateserial -out /var/lib/postgresql/.ssh/repluser.crt \    
    && cp /var/lib/postgresql/.ssh/server.crt /usr/local/share/ca-certificates \
    && cp /var/lib/postgresql/.ssh/ca.crt /usr/local/share/ca-certificates \
    {{ end }}&& cat /var/lib/postgresql/.ssh/id_rsa.pub > /var/lib/postgresql/.ssh/authorized_keys \
    && chmod 0600 /var/lib/postgresql/.ssh/id_rsa {{ if EnableSSL }}/var/lib/postgresql/.ssh/server.key{{ end }} \
    && chown postgres:postgres -R /var/lib/postgresql/.ssh \
    && cp -r /var/lib/postgresql/.ssh/ /root/.ssh \
    && touch /var/lib/postgresql/.psql_history \
    && chown postgres:postgres /var/lib/postgresql/.psql_history \
    && update-ca-certificates

RUN mkdir -p /var/lib/pgpro/sdm-${PG_MAJOR}/data \ 
  &&  printf "SDM_CLUSTER_NAME=${SDM_CLUSTER_NAME} \nSDM_LOG_LEVEL=${SDM_LOG_LEVEL} \nSDM_STORE_ENDPOINTS=${SDM_STORE_ENDPOINTS} \n" \ 
  >> /etc/shardman/shardmand-${SDM_CLUSTER_NAME}.env

RUN systemctl enable shardmand@${SDM_CLUSTER_NAME}

ENV PATH "/opt/pgpro/sdm-$PG_MAJOR/bin:${PATH}"
ENV LD_LIBRARY_PATH "/opt/pgpro/sdm-$PG_MAJOR/lib"
RUN ldconfig /opt/pgpro/sdm-$PG_MAJOR/lib 

EXPOSE 15432
EXPOSE 5432
EXPOSE 5433
EXPOSE 5442
EXPOSE 5443

WORKDIR /

CMD ["/bin/bash", "-c", "exec /sbin/init --log-color=true --log-level=info --log-target=console 3>&1"]
