# syntax=docker/dockerfile:1
FROM gobuilder:latest as gbuilder

ENV BUILDIR /build

RUN mkdir $BUILDIR

ARG PG_MAJOR={{ PgMajorVersion }}

WORKDIR $BUILDIR
COPY shardman-utils $BUILDIR/shardman-utils
WORKDIR $BUILDIR/shardman-utils

RUN  sed -i 's/$(pg_major)/{{ PgMajorVersion }}/g' Makefile

RUN --mount=type=cache,target=/go/pkg \
    go mod tidy && {{ Build }}

RUN <<-EOF
echo "export SHRUN_UTIL_VERSION=$(git describe --tags --abbrev=64)" | cat > /var/shrun_sdm_util.env
echo "export SHRUN_UTIL_BRANCH=$(git branch --show-current)" | cat >> /var/shrun_sdm_util.env
EOF

FROM {{ ImageSdmNode }}

ARG PG_MAJOR={{ PgMajorVersion }}
ARG SDM_CLUSTER_NAME={{ ClusterName }}
ARG SDM_LOG_LEVEL={{ ClusterLogLevel }}
ARG SDM_STORE_ENDPOINTS={{ EtcdList }}

ENV APP /opt/pgpro/sdm-$PG_MAJOR

COPY sdmspec.json /etc/shardman
COPY --chown=postgres:postgres generate.sql /var/lib/postgresql
COPY --from=gbuilder /build/shardman-utils/bin/ $APP/bin
COPY --from=gbuilder /var/shrun_sdm_util.env /var/shrun_sdm_util.env
{{ CopyDebugTool }}

RUN <<-EOF
  mkdir -p /var/lib/pgpro/sdm-14/data

  # Set SDM env vars
cat > /etc/shardman/shardmand-${SDM_CLUSTER_NAME}.env <<- EOFVARS
SDM_CLUSTER_NAME=${SDM_CLUSTER_NAME}
SDM_LOG_LEVEL=${SDM_LOG_LEVEL}
SDM_STORE_ENDPOINTS=${SDM_STORE_ENDPOINTS}
EOFVARS

cat /var/shrun_sdm_core.env /var/shrun_sdm_util.env > /var/lib/postgresql/.build_info

echo 'echo "Core version: $SHRUN_CORE_VERSION branch: $SHRUN_CORE_BRANCH"' >> /var/lib/postgresql/.build_info
echo 'echo "Util version: $SHRUN_UTIL_VERSION branch: $SHRUN_UTIL_BRANCH"' >> /var/lib/postgresql/.build_info
echo 'pg_probackup --version' >> /var/lib/postgresql/.build_info

chmod +x /var/lib/postgresql/.build_info
chown postgres:postgres /var/lib/postgresql/.build_info

rm -f /var/shrun_sdm_core.env /var/shrun_sdm_util.env
EOF

EXPOSE 15432
EXPOSE 5432
EXPOSE 5433
EXPOSE 5442
EXPOSE 5443

WORKDIR /

CMD ["/bin/bash", "-c", "exec /sbin/init --log-color=true --log-level=info --log-target=console 3>&1"]
