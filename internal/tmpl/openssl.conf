[ req ]
default_bits            = 2048
default_md              = sha256
distinguished_name      = dn
prompt                  = no

[ dn ]
C                       = RU
ST                      = MSK
L                       = Moscow
O                       = Postgres Professional
OU                      = Engeneering team
CN                      = ${ENV::CN}

[ root ]
basicConstraints        = critical,CA:TRUE
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always,issuer
keyUsage                = critical,digitalSignature,keyEncipherment,keyCertSign,cRLSign

[ ca ]
basicConstraints        = critical,CA:TRUE,pathlen:0
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always,issuer:always
keyUsage                = critical,digitalSignature,keyEncipherment,keyCertSign,cRLSign

[ server ]
subjectKeyIdentifier    = hash
basicConstraints        = critical,CA:FALSE
extendedKeyUsage        = serverAuth,clientAuth
keyUsage                = critical,digitalSignature,keyEncipherment,keyCertSign
authorityKeyIdentifier  = keyid,issuer:always
subjectAltName          = ${ENV::SAN}

[ peer ]
subjectKeyIdentifier    = hash
basicConstraints        = critical,CA:FALSE
extendedKeyUsage        = serverAuth,clientAuth
keyUsage                = critical,digitalSignature,keyEncipherment,keyCertSign
authorityKeyIdentifier  = keyid,issuer:always
subjectAltName          = ${ENV::SAN}

[ client ]
subjectKeyIdentifier    = hash
basicConstraints        = critical,CA:FALSE
extendedKeyUsage        = clientAuth
keyUsage                = critical,keyEncipherment,dataEncipherment
authorityKeyIdentifier  = keyid,issuer:always
subjectAltName          = ${ENV::SAN}
